name: BuildRelease

on:
  push:
    branches:
      - master
  schedule:
   - cron:  '0 0 * * 0'

jobs:
  build:
    
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
      
    - name: Increment version
      run: |
        echo ::set-env name=TAG_NAME::$(cat ./VERSION)

    - name: Bump release version	
      id: bump_version	
      uses: christian-draeger/increment-semantic-version@1.0.1	
      with:	
        current-version: '${{ env.TAG_NAME }}'	
        version-fragment: 'bug'    

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8.3

    - name: Install dependencies
      run: |
        if [ -f ./builder/requirements.txt ]; then pip3 install -r ./builder/requirements.txt; fi
        
    - name: Create config script
      env:
        gitPass: ${{ secrets.SLX_GIT_PASS }}
        gitToken: ${{ secrets.SLX_GIT_TOKEN }}
        gitUser: ${{ secrets.SLX_GIT_USER }}
      run: | 
        echo -e "version = 'v${{ steps.bump_version.outputs.next-version }}'\ngithub_username = '$gitUser'\ngithub_password = '$gitPass'\ngitlab_private_access_token = '$gitToken'"> ./builder/config.py
    
    - name: Compile DeepSea Zip
      run: |
        cd ./builder
        python ./builder.py deepsea output="./deepsea.zip" > ../output

    - name: Compile DeepSea-patches Zip
      run: |
        cd ./builder
        python ./builder.py deepsea-patches output="./deepsea-patched.zip" >> ../output
    
    - name: Compile DeepSea-minimal Zip
      run: |
        cd ./builder
        python ./builder.py deepsea-mini output="./deepsea-minimal.zip" >> ../output
    
    - name: Bump VERSION
      run: |	
       echo ${{ steps.bump_version.outputs.next-version }} > ./VERSION
    
    - uses: pCYSl5EDgo/cat@master
      id: release
      with:
        path: ./output
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ steps.bump_version.outputs.next-version }}
          release_name: Release ${{ steps.bump_version.outputs.next-version }}
          body: |
            ${{ steps.release.outputs.text }}
          draft: false
          prerelease: false


    - name: Upload Release Asset - DeepSea
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./builder/deepsea.zip
          asset_name: deepsea_v${{ steps.bump_version.outputs.next-version }}.zip
          asset_content_type: application/zip


    - name: Upload Release Asset - DeepSea-Patches
      id: upload-release-asset2
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./builder/deepsea-patched.zip
          asset_name: deepsea-patched_v${{ steps.bump_version.outputs.next-version }}.zip
          asset_content_type: application/zip



    - name: Upload Release Asset - DeepSea-Minimal
      id: upload-release-asset3
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./builder/deepsea-minimal.zip
          asset_name: deepsea-minimal_v${{ steps.bump_version.outputs.next-version }}.zip
          asset_content_type: application/zip   


    - name: Commit files	
      run: |	
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "[Auto] bump push after build" -a
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
